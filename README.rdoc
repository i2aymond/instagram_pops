== Instagram Pops

Instagram Pops is a little interview project I did, it essentially uses the Instagram API: <tt>popular</tt> to display the latest popular Instagram pictures, and refreshes every 30 seconds. It is a good little exercise to learn about Backbone, Mustache, CoffeeScript, and HTML5.

The project uses the following:

* Rails 3.2.9 (Ruby 1.9.2)
* All javascripts and css goes into assets pipeline
* Backbone for frontend architecture
* Mastache for the template for each picture and its info (username, comments, likes, etc)
* Konacha for javascript testing
* Postgres for database (so that it can be uploaded to Heroku)

== Getting Started

1. Get all of the source and install gems:
       $ bundle install

2. Setup database:
       $ rake db:create:all
       $ rake db:migrate

3. Start server
       $ rails server

3. Go to http://localhost:3000/ and you'll see

== Testing

1. To test Rails stuff
       $ rake test

2. To test javascript stuff
       $ bundle exec rake konacha:serve

Go to http://localhost:3500 and you'll see

== Backbone Architecture

The frontend only has a <tt>Album</tt> collection and a <tt>Picture</tt> model. The <tt>AlbumView</tt> takes an <tt>Album</tt> collection instance and binds the collection's <tt>add</tt> function to its own function which creates a new <tt>PictureView</tt> instance when a <tt>Picture</tt> instance is added into the collection. So in the main program we just create one <tt>Album</tt> collection and one <tt>AlbumView</tt> with the collection, then we just add as many <tt>Picture</tt>(s) as we want to the collection and everything else will be created automatically.